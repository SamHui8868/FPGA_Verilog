module MULTV2(a,b,m,clk,reset,count);
	input[7:0]a,b;
	input clk,reset;
	output count;
	output reg[15:0] m;
	reg[2:0] count;
 	wire[3:0] _a,_b;
	wire[7:0] ss;
	wire[15:0] _s,s;
	
assign _a=(count[0])?a[7:4]:a[3:0];
assign _b=(count[1])?b[7:4]:b[3:0];

mult_4 v0(_a,_b,ss);
assign _s=(count[1])?(count[0]?{ss,8'b0}:{4'b0,ss,4'b0}):(count[0]?{4'b0,ss,4'b0}:{8'b0,ss});

assign s=m+_s;

always@(posedge clk)
begin
	if(reset==1'b0)
		begin
			count<=3'd0;
			m<=16'd0;
		end
	else
		begin
			if(count==3'b100)
			begin
			count=3'b100;
			m<=m;
			end
			else
			begin
			m<=s;
			count=count+3'b001;
			end
		end
end

endmodule

