module ccu(reset,start,clk,load,_end);
input reset,clk,start;
output load,_end;
reg[2:0] count,ncount;
reg[1:0] cs,ns;
always@(posedge clk)
begin 
cs<=ns;
count<=ncount;
end
assign load=(cs==2'd1)?1'b1:1'd0;
assign _end=(cs==2'd0||cs==2'd3)?1'b0:1'd1;
always@(cs or reset or start)
if(reset==1'b0)
ns<=2'd0;
else
case(cs)
2'd0:
begin
ns<=(start)?2'd1:2'd0;
ncount<=3'd0;
end
2'd1:
begin
ns<=2'd2;
ncount<=count;
end
2'd2:
begin
ns<=(count==3'd7)?2'd3:2'd2;
ncount<=count+1;
end
2'd3:
begin
ns<=2'd3;
ncount<=3'd0;
end
endcase
endmodule